import{s as x,l as S,g as v,a as k,b as B,c as E,d as H,o as N,e as V,f as R,h as U}from"./index-DukBKsXi.js";function T(w,i,h,m){const u=w.indexOf(h);let f=-1;for(let t=0;t<i.length;t++)if(i[t][0]===m[0]&&i[t][1]===m[1]){f=t;break}return[u,f]}function q(w,i,h,m){let u=-1;for(let t=0;t<w.length;t++)if(w[t][0]===h[0]&&w[t][1]===h[1]){u=t;break}let f=-1;for(let t=0;t<i.length;t++)if(i[t][0]===m[0]&&i[t][1]===m[1]){f=t;break}return[u,f]}async function J(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await S(w),$=[];for(const l of b)try{const[c,o]=q(f,t,["Gesamt","Gesamt"],[l,"Gesamt"]);if(c!==-1&&o!==-1){const e=u.iat(c,o),n=e===0?"-;":"e;";$.push(`D;09;${l};${e};${n}
`)}else console.warn(`Index not found for ${l} (row:${c}, col:${o})`)}catch(c){console.error(`Error processing year ${l}:`,c)}return v($,h,i,m,b)}async function C(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await S(w),$=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),l=[...new Set(t.map(o=>o[1]))].filter(o=>o!=="Gesamt").reverse(),c=[];for(const o of $)for(const e of l)try{const[n,a]=q(f,t,["Gesamt","Gesamt"],[o,e]);if(n!==-1&&a!==-1){const r=u.iat(n,a),s=r===0?"-;":"e;";c.push(`D;09;${e};${o};${r};${s}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${a})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return v(c,h,i,m,$)}async function F(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await S(w),$=[...new Set(f.map(o=>o[0]))].filter(o=>o!=="Gesamt"),l=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),c=[];for(const o of l)for(const e of $)try{const[n,a]=q(f,t,[e,"Gesamt"],[o,"Gesamt"]);if(n!==-1&&a!==-1){const r=u.iat(n,a),s=r===0?"-;":"e;";c.push(`D;09;${e};${o};${r};${s}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${a})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return v(c,h,i,m,l)}async function P(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await S(w),$=[...new Set(f.map(e=>e[0]))].filter(e=>e!=="Gesamt"),l=[...new Set(t.map(e=>e[0]))].filter(e=>e!=="Gesamt"),c=[...new Set(t.map(e=>e[1]))].filter(e=>e!=="Gesamt").reverse(),o=[];for(const e of l)for(const n of c)for(const a of $)try{const[r,s]=q(f,t,[a,"Gesamt"],[e,n]);if(r!==-1&&s!==-1){const p=u.iat(r,s),y=p===0?"-;":"e;";o.push(`D;09;${n};${a};${e};${p};${y}
`)}else console.warn(`Index not found for ${e}/${n}/${a} (row:${r}, col:${s})`)}catch(r){console.error(`Error processing ${e}/${n}/${a}:`,r);continue}return v(o,h,i,m,l)}async function L(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await S(w),$=[...new Set(f.map(e=>e[0]))].filter(e=>e!=="Gesamt"),l=[...new Set(f.map(e=>e[1]))].filter(e=>e!=="Gesamt"),c=[...new Set(t.map(e=>e[0]))].filter(e=>e!=="Gesamt"),o=[];for(const e of c)for(const n of $)for(const a of l)try{const[r,s]=q(f,t,[n,a],[e,"Gesamt"]);if(r!==-1&&s!==-1){const p=u.iat(r,s),y=p===0?"-;":"e;";o.push(`D;09;${a};${e};${p};${y}
`)}else console.warn(`Index not found for ${e}/${n}/${a} (row:${r}, col:${s})`)}catch(r){console.error(`Error processing ${e}/${n}/${a}:`,r);continue}return v(o,h,i,m,c)}async function O(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await S(w),$=[...new Set(f.map(n=>n[0]))].filter(n=>n!=="Gesamt"),l=[...new Set(f.map(n=>n[1]))].filter(n=>n!=="Gesamt"),c=[...new Set(t.map(n=>n[0]))].filter(n=>n!=="Gesamt"),o=[...new Set(t.map(n=>n[1]))].filter(n=>n!=="Gesamt").reverse(),e=[];for(const n of c)for(const a of o)for(const r of $)for(const s of l)try{const[p,y]=q(f,t,[r,s],[n,a]);if(p!==-1&&y!==-1){const d=u.iat(p,y),g=d===0?"-;":"e;";e.push(`D;09;${a};${s};${n};${d};${g}
`)}}catch(p){console.error(`Error processing ${n}/${a}/${r}/${s}:`,p);continue}return v(e,h,i,m,c)}async function X(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await k(w),$=[...new Set(t.map(c=>c[0]))].filter(c=>c!=="Gesamt"),l=[];for(const c of $)try{const[o,e]=T(f,t,"Gesamt",[c,"Gesamt"]);if(o!==-1&&e!==-1){const n=u.iat(o,e),a=n===0?"-;":"e;";l.push(`D;09;${c};${n};${a}
`)}else console.warn(`Index not found for ${c} (row:${o}, col:${e})`)}catch(o){console.error(`Error processing ${c}:`,o);continue}return v(l,h,i,m,$)}async function Z(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await k(w),$=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),l=[...new Set(t.map(o=>o[1]))].filter(o=>o!=="Gesamt").reverse(),c=[];for(const o of $)for(const e of l)try{const[n,a]=T(f,t,"Gesamt",[o,e]);if(n!==-1&&a!==-1){const r=u.iat(n,a),s=r===0?"-;":"e;";c.push(`D;09;${e};${o};${r};${s}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${a})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return v(c,h,i,m,$)}async function K(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await k(w),$=[...new Set(f)].filter(o=>o!=="Gesamt"),l=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),c=[];for(const o of l)for(const e of $)try{const[n,a]=T(f,t,e,[o,"Gesamt"]);if(n!==-1&&a!==-1){const r=u.iat(n,a),s=r===0?"-;":"e;";c.push(`D;09;${e};${o};${r};${s}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${a})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return v(c,h,i,m,l)}async function Y(w,i,h,m){const{df:u,rowHeaders:f,colHeaders:t,years:b}=await k(w),$=[...new Set(f)].filter(e=>e!=="Gesamt"),l=[...new Set(t.map(e=>e[0]))].filter(e=>e!=="Gesamt"),c=[...new Set(t.map(e=>e[1]))].filter(e=>e!=="Gesamt").reverse(),o=[];for(const e of l)for(const n of c)for(const a of $)try{const[r,s]=T(f,t,a,[e,n]);if(r!==-1&&s!==-1){const p=u.iat(r,s),y=p===0?"-;":"e;";o.push(`D;09;${n};${a};${e};${p};${y}
`)}else console.warn(`Index not found for ${e}/${n}/${a} (row:${r}, col:${s})`)}catch(r){console.error(`Error processing ${e}/${n}/${a}:`,r);continue}return v(o,h,i,m,l)}async function z(w,i,h,m){const{df:u,monthNum:f,year:t}=await B(w),b=[],$=u.Geb_Gem_Betr.values;for(let r=0;r<$.length;r++){const s=String($[r]);s.includes("BETRIEBSART")&&(b.push(r),console.log(`Found BETRIEBSART at row ${r}: ${s}`))}if(b.length===0)throw new Error("No BETRIEBSART rows found in data");const l=u.iloc({rows:b}),c=l.Geb_Gem_Betr.values,o=l.M_geoeff.values,e=l.M_angebotene.values,n=[];for(let r=0;r<c.length;r++)try{const s=c[r],p=o[r]||0,y=p===0?"-;":"e;",d=e[r]||0,j=`D;09;${s};MONAT${f};${t};${p};${y};${d};${d===0?"-;":"e;"}
`;n.push(j)}catch(s){console.error(`Error processing row ${r}:`,s);continue}const a=`${i}-${t}.txt`;return E(n,h,i,m,a)}async function W(w,i,h,m){const{df:u,monthNum:f,year:t}=await B(w),b=[],$=u.Geb_Gem_Betr.values;for(let s=0;s<$.length;s++)String($[s]).includes("BETRIEBSART")&&b.push(s);if(b.length===0)throw new Error("No BETRIEBSART rows found in data");const l=u.iloc({rows:b}),c=l.Geb_Gem_Betr.values,o=l.J_ankuenfte.values,e=l.J_ubernachtungen.values,n=l.J_auslastung.values,a=[];for(let s=0;s<c.length;s++)try{const p=c[s],y=o[s]||0,d=y===0?"-;":"e;",g=e[s]||0,j=g===0?"-;":"e;",G=n[s]||0,I=G===0?"-":Number(G).toFixed(1),D=`D;09;${p};${t};${y};${d};${g};${j};${I};${G===0?"-;":"e;"}
`;a.push(D)}catch(p){console.error(`Error processing row ${s}:`,p);continue}const r=`${i}-${t}.txt`;return E(a,h,i,m,r)}async function Q(w,i,h,m){const{df:u,year:f}=await H(w),t=u.herkunft.values,b=t.map(d=>{const g=String(d);return g==="Deutschland"?"INLAND":g==="Ausland"?"AUSLAND":d});u.addColumn("herkunft",b,{inplace:!0});const $=[];t.forEach((d,g)=>{String(d)!=="Zusammen"&&$.push(g)});const c=$.map(d=>{const g=[];for(const j of u.columns)g.push(u[j].values[d]);return g}).map((d,g)=>({index:g,betriebsart:String(d[0]),herkunft:String(d[1]),data:d}));c.sort((d,g)=>d.betriebsart!==g.betriebsart?d.betriebsart.localeCompare(g.betriebsart):g.herkunft.localeCompare(d.herkunft));const o=c.map(d=>d.data),e=new N(o,{columns:u.columns}),n=[],a=e.betriebsart.values,r=e.herkunft.values,s=e.ankuenfte_jahr.values,p=e.naechte_jahr.values;for(let d=0;d<a.length;d++)try{const g=String(a[d]),j=String(r[d]),G=Number(s[d])||0,I=Number(p[d])||0,_=`D;09;${j};${g};${f};${G};${G===0?"-;":"e;"};${I};${I===0?"-;":"e;"}
`;n.push(_)}catch(g){console.error(`Error processing row ${d}:`,g);continue}const y=`${i}-${f}.txt`;return E(n,h,i,m,y)}async function ee(w,i,h,m){const{df:u,monthNum:f,year:t}=await B(w),b=[8,9,10,11,12,13],$=Math.max(...b);if($>=u.shape[0]){console.warn(`Index ${$} is out of bounds for DataFrame with ${u.shape[0]} rows`);const r=b.filter(s=>s<u.shape[0]);if(r.length===0)throw new Error("No valid row indices found for data extraction");b.length=0,b.push(...r)}const l=u.iloc({rows:b}),c=l.Geb_Gem_Betr.values,o=l.M_geoeff.values,e=l.M_angebotene.values,n=[];for(let r=0;r<c.length;r++)try{const s=c[r],p=o[r]||0,y=p===0?"-;":"e;",d=e[r]||0,j=`D;09;${s};MONAT${f};${t};${p};${y};${d};${d===0?"-;":"e;"}
`;n.push(j)}catch(s){console.error(`Error processing row ${r}:`,s);continue}const a=`${i}-${t}.txt`;return E(n,h,i,m,a)}async function oe(w,i,h,m){const{df:u,year:f}=await B(w),t=[8,9,10,11,12,13],b=Math.max(...t);if(b>=u.shape[0]){console.warn(`Index ${b} is out of bounds for DataFrame with ${u.shape[0]} rows`);const r=t.filter(s=>s<u.shape[0]);if(r.length===0)throw new Error("No valid row indices found for data extraction");t.length=0,t.push(...r)}const $=u.iloc({rows:t}),l=$.Geb_Gem_Betr.values,c=$.J_ankuenfte.values,o=$.J_ubernachtungen.values,e=$.J_auslastung.values,n=[];for(let r=0;r<l.length;r++)try{const s=l[r],p=c[r]||0,y=p===0?"-;":"e;",d=o[r]||0,g=d===0?"-;":"e;",j=e[r]||0,G=j===0?"-":Number(j).toFixed(1),A=`D;09;${s};${f};${p};${y};${d};${g};${G};${j===0?"-;":"e;"}
`;n.push(A)}catch(s){console.error(`Error processing row ${r}:`,s);continue}const a=`${i}-${f}.txt`;return E(n,h,i,m,a)}async function ne(w,i,h,m){const{df:u,year:f}=await V(w),t=[["INLAND","d"],["AUSLAND","a"]],b=[],$=/^PRAEDIKAT-[A-Z]$/,{df:l}=R(u,0,$),c=l.shape[0];if(c!==6){const n=l.iloc({columns:[0]}).values.flat();throw new Error(`Erwarte 6 PRAEDIKAT Zeilen (A-P), gefunden (${c}): [${n.join(", ")}]`)}const o=l.iloc({columns:[0]}).values.flat();for(const[n,a]of t){const r=l[`ank_${a}`].values,s=l[`nae_${a}`].values;for(const[p,y]of o.entries())try{const d=Number(r[p])||0,g=Number(s[p])||0,[j,G]=[d,g].map(I=>I===0?"-;":"e;");b.push(`D;09;${y};${n};${f};${d};${j};${g};${G}
`)}catch(d){console.error(`Error processing ${y} for ${n}:`,d)}}const e=`${i}-${f}.txt`;return E(b,h,i,m,e)}async function te(w,i,h,m){const{df:u,whj:f,shj:t}=await U(w),b=[["SOMMER-HJ",t],["WINTER-HJ",f]],$=[],l=/^BETRIEBSART\d+$/,{df:c}=R(u,0,l),o=c.shape[0];if(o!==9){const s=c.iloc({columns:[0]}).values.flat();throw new Error(`Erwarte 9 BETRIEBSART Zeilen (01-09), gefunden (${o}): [${s.join(", ")}]`)}const e=c.iloc({columns:[0]}).values.flat();for(const[s,p]of b){const y=c[`${s}_ank`].values,d=c[`${s}_nae`].values;for(const[g,j]of e.entries())try{const G=Number(y[g])||0,I=Number(d[g])||0,[A,D]=[G,I].map(_=>_===0?"-;":"e;");$.push(`D;09;${j};${s};${p};${G};${A};${I};${D}
`)}catch(G){console.error(`Error processing ${j} for ${s}:`,G);continue}}const n=f.slice(0,-3),a=t.slice(0,-3),r=`${i}-${n}-${a}.txt`;return E($,h,i,m,r)}const re=x,se=x,ce=x,ae=x,le=x,ue=x,fe=x,ie=x,$e=x,de=x,we=x,me=x,he=x;export{J as job21341lj001,C as job21341lj002,F as job21341lj003,P as job21341lj004,L as job21341lj005,O as job21341lj006,X as job21341lj007,Z as job21341lj008,K as job21341lj009,Y as job21341lj010,we as job45511gh017,ce as job45511gh018,he as job45511gj017,de as job45511gj018,me as job45511gm017,ae as job45511gm018,$e as job45511gx014,te as job45511lh022,W as job45511lj022,Q as job45511lj023,z as job45511lm021,oe as job45511pj022,ne as job45511pj023,ee as job45511pm021,fe as job45511th017,se as job45511th018,ue as job45511tj017,re as job45511tj018,ie as job45511tm017,le as job45511tm018};
