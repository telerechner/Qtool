import{s as h,l as B,g as E,a as _,b as S,c as I,d as R,o as D,e as N}from"./index-fAnd4GVi.js";function V(d,a,m,g){const c=d.indexOf(m);let u=-1;for(let e=0;e<a.length;e++)if(a[e][0]===g[0]&&a[e][1]===g[1]){u=e;break}return[c,u]}function q(d,a,m,g){let c=-1;for(let e=0;e<d.length;e++)if(d[e][0]===m[0]&&d[e][1]===m[1]){c=e;break}let u=-1;for(let e=0;e<a.length;e++)if(a[e][0]===g[0]&&a[e][1]===g[1]){u=e;break}return[c,u]}async function C(d,a,m,g){const{df:c,rowHeaders:u,colHeaders:e,years:j}=await B(d),b=[];for(const i of j)try{const[f,p]=q(u,e,["Gesamt","Gesamt"],[i,"Gesamt"]);if(f!==-1&&p!==-1){const r=c.iat(f,p),t=r===0?"-;":"e;";b.push(`D;09;${i};${r};${t}
`),console.log(`Added result for ${i}: ${r}`)}else console.warn(`Index not found for ${i} (row:${f}, col:${p})`)}catch(f){console.error(`Error processing year ${i}:`,f)}return E(b,m,a,g,j)}async function J(d,a,m,g){const{df:c,rowHeaders:u,colHeaders:e,years:j}=await B(d),b=[...new Set(u.map(t=>t[0]))].filter(t=>t!=="Gesamt"),i=[...new Set(u.map(t=>t[1]))].filter(t=>t!=="Gesamt"),f=[...new Set(e.map(t=>t[0]))].filter(t=>t!=="Gesamt"),p=[...new Set(e.map(t=>t[1]))].filter(t=>t!=="Gesamt").reverse(),r=[];for(const t of f)for(const w of p)for(const s of b)for(const n of i)try{const[$,v]=q(u,e,[s,n],[t,w]);if($!==-1&&v!==-1){const o=c.iat($,v),l=o===0?"-;":"e;";r.push(`D;09;${w};${n};${t};${o};${l}
`)}}catch($){console.error(`Error processing ${t}/${w}/${s}/${n}:`,$);continue}return E(r,m,a,g,f)}async function F(d,a,m,g){const{df:c,rowHeaders:u,colHeaders:e,years:j}=await _(d),b=[...new Set(u)].filter(r=>r!=="Gesamt"),i=[...new Set(e.map(r=>r[0]))].filter(r=>r!=="Gesamt"),f=[...new Set(e.map(r=>r[1]))].filter(r=>r!=="Gesamt").reverse(),p=[];for(const r of i)for(const t of f)for(const w of b)try{const[s,n]=V(u,e,w,[r,t]);if(s!==-1&&n!==-1){const $=c.iat(s,n),v=$===0?"-;":"e;";p.push(`D;09;${t};${w};${r};${$};${v}
`)}else console.warn(`Index not found for ${r}/${t}/${w} (row:${s}, col:${n})`)}catch(s){console.error(`Error processing ${r}/${t}/${w}:`,s);continue}return E(p,m,a,g,i)}async function H(d,a,m,g){const{df:c,monthNum:u,year:e}=await S(d),j=c.values;for(let n=0;n<Math.min(30,j.length);n++);const b=[],i=c.Geb_Gem_Betr.values;for(let n=0;n<i.length;n++)String(i[n]).includes("BETRIEBSART")&&b.push(n);if(b.length===0)throw new Error("No BETRIEBSART rows found in data");const f=c.iloc({rows:b}),p=f.Geb_Gem_Betr.values,r=f.J_ankuenfte.values,t=f.J_ubernachtungen.values,w=[];for(let n=0;n<p.length;n++)try{const $=p[n],v=r[n]||0,o=v===0?"-;":"e;",l=t[n]||0,G=`D;09;${$};${e};${v};${o};${l};${l===0?"-;":"e;"}
`;w.push(G)}catch($){console.error(`Error processing row ${n}:`,$);continue}const s=`${a}-${e}.txt`;return I(w,m,a,g,s)}async function O(d,a,m,g){const{df:c,monthNum:u,year:e}=await S(d),j=[10,11,12,13,14,15],b=Math.max(...j);if(b>=c.shape[0]){console.warn(`Index ${b} is out of bounds for DataFrame with ${c.shape[0]} rows`);const s=j.filter(n=>n<c.shape[0]);if(s.length===0)throw new Error("No valid row indices found for data extraction");j.length=0,j.push(...s)}const i=c.iloc({rows:j}),f=i.Geb_Gem_Betr.values,p=i.M_geoeff.values,r=i.M_angebotene.values,t=[];for(let s=0;s<f.length;s++)try{const n=f[s],$=p[s]||0,v=$===0?"-;":"e;",o=r[s]||0,y=`D;09;${n};MONAT${u};${e};${$};${v};${o};${o===0?"-;":"e;"}
`;t.push(y)}catch(n){console.error(`Error processing row ${s}:`,n);continue}const w=`${a}-${e}.txt`;return I(t,m,a,g,w)}async function U(d,a,m,g){const{df:c,monthNum:u,year:e}=await S(d),j=[],b=c.Geb_Gem_Betr.values;for(let s=0;s<b.length;s++){const n=String(b[s]);n.includes("BETRIEBSART")&&(j.push(s),console.log(`Found BETRIEBSART at row ${s}: ${n}`))}if(j.length===0)throw new Error("No BETRIEBSART rows found in data");const i=c.iloc({rows:j}),f=i.Geb_Gem_Betr.values,p=i.M_geoeff.values,r=i.M_angebotene.values,t=[];for(let s=0;s<f.length;s++)try{const n=f[s],$=p[s]||0,v=$===0?"-;":"e;",o=r[s]||0,y=`D;09;${n};MONAT${u};${e};${$};${v};${o};${o===0?"-;":"e;"}
`;t.push(y)}catch(n){console.error(`Error processing row ${s}:`,n);continue}const w=`${a}-${e}.txt`;return I(t,m,a,g,w)}async function X(d,a,m,g){const{df:c,year:u}=await R(d),e=c.herkunft.values,j=e.map(o=>{const l=String(o);return l==="Deutschland"?"INLAND":l==="Ausland"?"AUSLAND":o});c.addColumn("herkunft",j,{inplace:!0});const b=[];e.forEach((o,l)=>{String(o)!=="Zusammen"&&b.push(l)});const f=b.map(o=>{const l=[];for(const y of c.columns)l.push(c[y].values[o]);return l}).map((o,l)=>({index:l,betriebsart:String(o[0]),herkunft:String(o[1]),data:o}));f.sort((o,l)=>o.betriebsart!==l.betriebsart?o.betriebsart.localeCompare(l.betriebsart):l.herkunft.localeCompare(o.herkunft));const p=f.map(o=>o.data),r=new D(p,{columns:c.columns}),t=[],w=r.betriebsart.values,s=r.herkunft.values,n=r.ankuenfte_jahr.values,$=r.naechte_jahr.values;for(let o=0;o<w.length;o++)try{const l=String(w[o]),y=String(s[o]),G=Number(n[o])||0,x=Number($[o])||0,T=`D;09;${y};${l};${u};${G};${G===0?"-;":"e;"};${x};${x===0?"-;":"e;"}
`;t.push(T)}catch(l){console.error(`Error processing row ${o}:`,l);continue}const v=`${a}-${u}.txt`;return I(t,m,a,g,v)}async function L(d,a,m,g){const{df:c,whj:u,shj:e}=await N(d),j=[["SOMMER-HJ",e],["WINTER-HJ",u]],b=[],i=c.betriebsart.values;for(const[t,w]of j){const s=`${t}_ank`,n=`${t}_nae`,$=c[s].values,v=c[n].values;for(let o=0;o<i.length;o++)try{const l=String(i[o]),y=Number($[o])||0,G=Number(v[o])||0,k=`D;09;${l};${t};${w};${y};${y===0?"-;":"e;"};${G};${G===0?"-;":"e;"}
`;b.push(k)}catch(l){console.error(`Error processing ${t} row ${o}:`,l);continue}}const f=u.slice(0,-3),p=e.slice(0,-3),r=`${a}-${f}-${p}.txt`;return I(b,m,a,g,r)}const Y=h,W=h,Z=h,z=h,K=h,P=h,Q=h,ee=h,te=h,oe=h,ne=h,se=h,re=h,ce=h,ae=h,le=h,ue=h,ie=h,fe=h,be=h,$e=h,he=h;export{C as job21341lj001,Y as job21341lj002,W as job21341lj003,Z as job21341lj004,z as job21341lj005,J as job21341lj006,K as job21341lj007,P as job21341lj008,Q as job21341lj009,F as job21341lj010,be as job45511gh017,se as job45511gh018,he as job45511gj017,fe as job45511gj018,$e as job45511gm017,re as job45511gm018,ie as job45511gx014,L as job45511lh022,H as job45511lj022,X as job45511lj023,U as job45511lm021,ee as job45511pj022,te as job45511pj023,O as job45511pm021,le as job45511th017,ne as job45511th018,ae as job45511tj017,oe as job45511tj018,ue as job45511tm017,ce as job45511tm018};
