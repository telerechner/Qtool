import{s as j,l as S,g as I,a as _,b as D,c as q,d as R,o as N,e as H,f as U}from"./index-CF1Ewo4n.js";function B(w,i,h,m){const c=w.indexOf(h);let u=-1;for(let t=0;t<i.length;t++)if(i[t][0]===m[0]&&i[t][1]===m[1]){u=t;break}return[c,u]}function E(w,i,h,m){let c=-1;for(let t=0;t<w.length;t++)if(w[t][0]===h[0]&&w[t][1]===h[1]){c=t;break}let u=-1;for(let t=0;t<i.length;t++)if(i[t][0]===m[0]&&i[t][1]===m[1]){u=t;break}return[c,u]}async function C(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await S(w),d=[];for(const f of b)try{const[a,o]=E(u,t,["Gesamt","Gesamt"],[f,"Gesamt"]);if(a!==-1&&o!==-1){const e=c.iat(a,o),n=e===0?"-;":"e;";d.push(`D;09;${f};${e};${n}
`)}else console.warn(`Index not found for ${f} (row:${a}, col:${o})`)}catch(a){console.error(`Error processing year ${f}:`,a)}return I(d,h,i,m,b)}async function M(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await S(w),d=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),f=[...new Set(t.map(o=>o[1]))].filter(o=>o!=="Gesamt").reverse(),a=[];for(const o of d)for(const e of f)try{const[n,l]=E(u,t,["Gesamt","Gesamt"],[o,e]);if(n!==-1&&l!==-1){const s=c.iat(n,l),r=s===0?"-;":"e;";a.push(`D;09;${e};${o};${s};${r}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${l})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return I(a,h,i,m,d)}async function J(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await S(w),d=[...new Set(u.map(o=>o[0]))].filter(o=>o!=="Gesamt"),f=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),a=[];for(const o of f)for(const e of d)try{const[n,l]=E(u,t,[e,"Gesamt"],[o,"Gesamt"]);if(n!==-1&&l!==-1){const s=c.iat(n,l),r=s===0?"-;":"e;";a.push(`D;09;${e};${o};${s};${r}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${l})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return I(a,h,i,m,f)}async function F(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await S(w),d=[...new Set(u.map(e=>e[0]))].filter(e=>e!=="Gesamt"),f=[...new Set(t.map(e=>e[0]))].filter(e=>e!=="Gesamt"),a=[...new Set(t.map(e=>e[1]))].filter(e=>e!=="Gesamt").reverse(),o=[];for(const e of f)for(const n of a)for(const l of d)try{const[s,r]=E(u,t,[l,"Gesamt"],[e,n]);if(s!==-1&&r!==-1){const p=c.iat(s,r),y=p===0?"-;":"e;";o.push(`D;09;${n};${l};${e};${p};${y}
`)}else console.warn(`Index not found for ${e}/${n}/${l} (row:${s}, col:${r})`)}catch(s){console.error(`Error processing ${e}/${n}/${l}:`,s);continue}return I(o,h,i,m,f)}async function L(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await S(w),d=[...new Set(u.map(e=>e[0]))].filter(e=>e!=="Gesamt"),f=[...new Set(u.map(e=>e[1]))].filter(e=>e!=="Gesamt"),a=[...new Set(t.map(e=>e[0]))].filter(e=>e!=="Gesamt"),o=[];for(const e of a)for(const n of d)for(const l of f)try{const[s,r]=E(u,t,[n,l],[e,"Gesamt"]);if(s!==-1&&r!==-1){const p=c.iat(s,r),y=p===0?"-;":"e;";o.push(`D;09;${l};${e};${p};${y}
`)}else console.warn(`Index not found for ${e}/${n}/${l} (row:${s}, col:${r})`)}catch(s){console.error(`Error processing ${e}/${n}/${l}:`,s);continue}return I(o,h,i,m,a)}async function O(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await S(w),d=[...new Set(u.map(n=>n[0]))].filter(n=>n!=="Gesamt"),f=[...new Set(u.map(n=>n[1]))].filter(n=>n!=="Gesamt"),a=[...new Set(t.map(n=>n[0]))].filter(n=>n!=="Gesamt"),o=[...new Set(t.map(n=>n[1]))].filter(n=>n!=="Gesamt").reverse(),e=[];for(const n of a)for(const l of o)for(const s of d)for(const r of f)try{const[p,y]=E(u,t,[s,r],[n,l]);if(p!==-1&&y!==-1){const $=c.iat(p,y),g=$===0?"-;":"e;";e.push(`D;09;${l};${r};${n};${$};${g}
`)}}catch(p){console.error(`Error processing ${n}/${l}/${s}/${r}:`,p);continue}return I(e,h,i,m,a)}async function X(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await _(w),d=[...new Set(t.map(a=>a[0]))].filter(a=>a!=="Gesamt"),f=[];for(const a of d)try{const[o,e]=B(u,t,"Gesamt",[a,"Gesamt"]);if(o!==-1&&e!==-1){const n=c.iat(o,e),l=n===0?"-;":"e;";f.push(`D;09;${a};${n};${l}
`)}else console.warn(`Index not found for ${a} (row:${o}, col:${e})`)}catch(o){console.error(`Error processing ${a}:`,o);continue}return I(f,h,i,m,d)}async function Y(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await _(w),d=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),f=[...new Set(t.map(o=>o[1]))].filter(o=>o!=="Gesamt").reverse(),a=[];for(const o of d)for(const e of f)try{const[n,l]=B(u,t,"Gesamt",[o,e]);if(n!==-1&&l!==-1){const s=c.iat(n,l),r=s===0?"-;":"e;";a.push(`D;09;${e};${o};${s};${r}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${l})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return I(a,h,i,m,d)}async function z(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await _(w),d=[...new Set(u)].filter(o=>o!=="Gesamt"),f=[...new Set(t.map(o=>o[0]))].filter(o=>o!=="Gesamt"),a=[];for(const o of f)for(const e of d)try{const[n,l]=B(u,t,e,[o,"Gesamt"]);if(n!==-1&&l!==-1){const s=c.iat(n,l),r=s===0?"-;":"e;";a.push(`D;09;${e};${o};${s};${r}
`)}else console.warn(`Index not found for ${o}/${e} (row:${n}, col:${l})`)}catch(n){console.error(`Error processing ${o}/${e}:`,n);continue}return I(a,h,i,m,f)}async function W(w,i,h,m){const{df:c,rowHeaders:u,colHeaders:t,years:b}=await _(w),d=[...new Set(u)].filter(e=>e!=="Gesamt"),f=[...new Set(t.map(e=>e[0]))].filter(e=>e!=="Gesamt"),a=[...new Set(t.map(e=>e[1]))].filter(e=>e!=="Gesamt").reverse(),o=[];for(const e of f)for(const n of a)for(const l of d)try{const[s,r]=B(u,t,l,[e,n]);if(s!==-1&&r!==-1){const p=c.iat(s,r),y=p===0?"-;":"e;";o.push(`D;09;${n};${l};${e};${p};${y}
`)}else console.warn(`Index not found for ${e}/${n}/${l} (row:${s}, col:${r})`)}catch(s){console.error(`Error processing ${e}/${n}/${l}:`,s);continue}return I(o,h,i,m,f)}async function Z(w,i,h,m){const{df:c,monthNum:u,year:t}=await D(w),b=[],d=c.Geb_Gem_Betr.values;for(let s=0;s<d.length;s++){const r=String(d[s]);r.includes("BETRIEBSART")&&(b.push(s),console.log(`Found BETRIEBSART at row ${s}: ${r}`))}if(b.length===0)throw new Error("No BETRIEBSART rows found in data");const f=c.iloc({rows:b}),a=f.Geb_Gem_Betr.values,o=f.M_geoeff.values,e=f.M_angebotene.values,n=[];for(let s=0;s<a.length;s++)try{const r=a[s],p=o[s]||0,y=p===0?"-;":"e;",$=e[s]||0,G=`D;09;${r};MONAT${u};${t};${p};${y};${$};${$===0?"-;":"e;"}
`;n.push(G)}catch(r){console.error(`Error processing row ${s}:`,r);continue}const l=`${i}-${t}.txt`;return q(n,h,i,m,l)}async function K(w,i,h,m){const{df:c,monthNum:u,year:t}=await D(w),b=[],d=c.Geb_Gem_Betr.values;for(let r=0;r<d.length;r++)String(d[r]).includes("BETRIEBSART")&&b.push(r);if(b.length===0)throw new Error("No BETRIEBSART rows found in data");const f=c.iloc({rows:b}),a=f.Geb_Gem_Betr.values,o=f.J_ankuenfte.values,e=f.J_ubernachtungen.values,n=f.J_auslastung.values,l=[];for(let r=0;r<a.length;r++)try{const p=a[r],y=o[r]||0,$=y===0?"-;":"e;",g=e[r]||0,G=g===0?"-;":"e;",x=n[r]||0,v=x===0?"-":Number(x).toFixed(1),A=`D;09;${p};${t};${y};${$};${g};${G};${v};${x===0?"-;":"e;"}
`;l.push(A)}catch(p){console.error(`Error processing row ${r}:`,p);continue}const s=`${i}-${t}.txt`;return q(l,h,i,m,s)}async function P(w,i,h,m){const{df:c,year:u}=await R(w),t=c.herkunft.values,b=t.map($=>{const g=String($);return g==="Deutschland"?"INLAND":g==="Ausland"?"AUSLAND":$});c.addColumn("herkunft",b,{inplace:!0});const d=[];t.forEach(($,g)=>{String($)!=="Zusammen"&&d.push(g)});const a=d.map($=>{const g=[];for(const G of c.columns)g.push(c[G].values[$]);return g}).map(($,g)=>({index:g,betriebsart:String($[0]),herkunft:String($[1]),data:$}));a.sort(($,g)=>$.betriebsart!==g.betriebsart?$.betriebsart.localeCompare(g.betriebsart):g.herkunft.localeCompare($.herkunft));const o=a.map($=>$.data),e=new N(o,{columns:c.columns}),n=[],l=e.betriebsart.values,s=e.herkunft.values,r=e.ankuenfte_jahr.values,p=e.naechte_jahr.values;for(let $=0;$<l.length;$++)try{const g=String(l[$]),G=String(s[$]),x=Number(r[$])||0,v=Number(p[$])||0,T=`D;09;${G};${g};${u};${x};${x===0?"-;":"e;"};${v};${v===0?"-;":"e;"}
`;n.push(T)}catch(g){console.error(`Error processing row ${$}:`,g);continue}const y=`${i}-${u}.txt`;return q(n,h,i,m,y)}async function Q(w,i,h,m){const{df:c,whj:u,shj:t}=await H(w),b=[["SOMMER-HJ",t],["WINTER-HJ",u]],d=[],f=c.betriebsart.values;for(const[n,l]of b){const s=`${n}_ank`,r=`${n}_nae`,p=c[s].values,y=c[r].values;for(let $=0;$<f.length;$++)try{const g=String(f[$]),G=Number(p[$])||0,x=Number(y[$])||0,A=`D;09;${g};${n};${l};${G};${G===0?"-;":"e;"};${x};${x===0?"-;":"e;"}
`;d.push(A)}catch(g){console.error(`Error processing ${n} row ${$}:`,g);continue}}const a=u.slice(0,-3),o=t.slice(0,-3),e=`${i}-${a}-${o}.txt`;return q(d,h,i,m,e)}async function ee(w,i,h,m){const{df:c,monthNum:u,year:t}=await D(w),b=[8,9,10,11,12,13],d=Math.max(...b);if(d>=c.shape[0]){console.warn(`Index ${d} is out of bounds for DataFrame with ${c.shape[0]} rows`);const s=b.filter(r=>r<c.shape[0]);if(s.length===0)throw new Error("No valid row indices found for data extraction");b.length=0,b.push(...s)}const f=c.iloc({rows:b}),a=f.Geb_Gem_Betr.values,o=f.M_geoeff.values,e=f.M_angebotene.values,n=[];for(let s=0;s<a.length;s++)try{const r=a[s],p=o[s]||0,y=p===0?"-;":"e;",$=e[s]||0,G=`D;09;${r};MONAT${u};${t};${p};${y};${$};${$===0?"-;":"e;"}
`;n.push(G)}catch(r){console.error(`Error processing row ${s}:`,r);continue}const l=`${i}-${t}.txt`;return q(n,h,i,m,l)}async function oe(w,i,h,m){const{df:c,year:u}=await D(w),t=[8,9,10,11,12,13],b=Math.max(...t);if(b>=c.shape[0]){console.warn(`Index ${b} is out of bounds for DataFrame with ${c.shape[0]} rows`);const s=t.filter(r=>r<c.shape[0]);if(s.length===0)throw new Error("No valid row indices found for data extraction");t.length=0,t.push(...s)}const d=c.iloc({rows:t}),f=d.Geb_Gem_Betr.values,a=d.J_ankuenfte.values,o=d.J_ubernachtungen.values,e=d.J_auslastung.values,n=[];for(let s=0;s<f.length;s++)try{const r=f[s],p=a[s]||0,y=p===0?"-;":"e;",$=o[s]||0,g=$===0?"-;":"e;",G=e[s]||0,x=G===0?"-":Number(G).toFixed(1),k=`D;09;${r};${u};${p};${y};${$};${g};${x};${G===0?"-;":"e;"}
`;n.push(k)}catch(r){console.error(`Error processing row ${s}:`,r);continue}const l=`${i}-${u}.txt`;return q(n,h,i,m,l)}async function ne(w,i,h,m){const{df:c,year:u}=await U(w),t=Array.from({length:6},(o,e)=>e+8),b=[["INLAND","d"],["AUSLAND","a"]],d=[],f=c.regio_mm.values;for(const o of t){if(o>=f.length){console.log(`Row index ${o} out of bounds, skipping`);continue}for(const[e,n]of b)try{const l=String(f[o]),s=`ank_${n}`,r=`nae_${n}`,p=c[s].values,y=c[r].values,$=Number(p[o])||0,g=Number(y[o])||0,v=`D;09;${l};${e};${u};${$};${$===0?"-;":"e;"};${g};${g===0?"-;":"e;"}
`;d.push(v)}catch(l){console.error(`Error processing row ${o} for ${e}:`,l);continue}}const a=`${i}-${u}.txt`;return q(d,h,i,m,a)}const te=j,se=j,re=j,ce=j,ae=j,le=j,ue=j,fe=j,ie=j,$e=j,de=j,we=j,me=j;export{C as job21341lj001,M as job21341lj002,J as job21341lj003,F as job21341lj004,L as job21341lj005,O as job21341lj006,X as job21341lj007,Y as job21341lj008,z as job21341lj009,W as job21341lj010,de as job45511gh017,re as job45511gh018,me as job45511gj017,$e as job45511gj018,we as job45511gm017,ce as job45511gm018,ie as job45511gx014,Q as job45511lh022,K as job45511lj022,P as job45511lj023,Z as job45511lm021,oe as job45511pj022,ne as job45511pj023,ee as job45511pm021,ue as job45511th017,se as job45511th018,le as job45511tj017,te as job45511tj018,fe as job45511tm017,ae as job45511tm018};
